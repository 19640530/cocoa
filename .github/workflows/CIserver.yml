# This is a basic workflow to help you get started with Actions

name: CI-Server

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main, develop, 'feature/**' ]
    paths:
      - '.github/workflows/CIserver.yml'
      - 'src/**'
      - 'Covid19Radar.Functions.sln'
      - 'Covid19Radar.Functions.runsettings'
      - 'Nuget.config'
  pull_request:
    branches: [ main, develop, 'feature/**' ]
    paths:
      - '.github/workflows/CIserver.yml'
      - 'src/**'
      - 'Covid19Radar.Functions.sln'
      - 'Covid19Radar.Functions.runsettings'
      - 'Nuget.config'
jobs:
  build:
    name: build
    runs-on: windows-latest
    strategy:
      matrix:
        Configuration: [Debug, Release]
    steps:
    - name: install report generator
      run: dotnet tool update dotnet-reportgenerator-globaltool -g
    - name: install SonarScanner
      if: ${{ matrix.Configuration == 'Release' }}
      run: dotnet tool install --global dotnet-sonarscanner
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Begin SonarScanner
      if: ${{ matrix.Configuration == 'Release' }}
      run: dotnet sonarscanner begin  /k:"cocoa-mhlw_cocoa" /o:"cocoa-mhlw" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v1
    - name: msbuild
      run: msbuild ${{ github.workspace }}/Covid19Radar.Functions.sln /restore /t:Build /p:Configuration=${{ matrix.Configuration }}
    - name: Execute Unit Tests
      run: dotnet test ${{ github.workspace }}/Covid19Radar.Functions.sln /p:CollectCoverage=true --no-build --logger trx --settings ${{ github.workspace }}/Covid19Radar.Functions.runsettings --configuration ${{ matrix.Configuration }} --collect:"XPlat Code Coverage"    
      env:
        DOTNET_CLI_TELEMETRY_OPTOUT: true 
    - name: Generate Coverage Report
      run: reportgenerator "-reports:${{ github.workspace }}/TestResults/*/coverage.cobertura.xml" "-targetdir:sonarqubecoverage" "-reporttypes:SonarQube"
    - name: End SonarScanner
      if: ${{ matrix.Configuration == 'Release' }}
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
