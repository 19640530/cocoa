<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Developments on COCOA Open Source Project</title><link>https://cocoa-mhlw.github.io/cocoa/docs/development/</link><description>Recent content in Developments on COCOA Open Source Project</description><generator>Hugo -- gohugo.io</generator><language>ja-JP</language><atom:link href="https://cocoa-mhlw.github.io/cocoa/docs/development/index.xml" rel="self" type="application/rss+xml"/><item><title>ブランチ構成</title><link>https://cocoa-mhlw.github.io/cocoa/docs/development/branches/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cocoa-mhlw.github.io/cocoa/docs/development/branches/</guid><description>ブランチ構成 # develop # デフォルトブランチです。Pull Requestは原則、このブランチに向けて送ってください。
main # リリースされているCOCOAのソースコードの最新版が格納されます。各バージョンのコードはReleaseにあります。
featureブランチ # 大きめの機能を作る際、複数人数で作業を分担するためにcocoa-mhlw/cocoa上に作ります。featureブランチがある場合、関連するPull Requestは該当するfeatureブランチに向けます。作業の完了後、develop向けにPull Reqeustを出す流れです。 featureを作るか、developをIssueやPull Requestの大きさを見ながらコラボレーターが判断します。詳細は相談してください。</description></item><item><title>ビルド方法</title><link>https://cocoa-mhlw.github.io/cocoa/docs/development/how_to_build/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cocoa-mhlw.github.io/cocoa/docs/development/how_to_build/</guid><description>ビルド方法 # 事前準備 # COCOAはXamarinベースのアプリなので、Xamarin開発環境(Visual Studio)を自身のPCへインストールします。 詳細な手順等については、Xamarinのインストールを参照してください。
Xamarinについては、Xamarinドキュメント を参照してください。
COCOAの構成 # COCOA内には2つのソリューションファイルがあります。
COCOAアプリ・・・Covid19Radar.sln COCOAサーバ・・・Covid19Radar.Functions.sln COCOAアプリのビルド # ビルド構成 # COCOAアプリのビルド構成は以下の通りです(Android/iOS共通)。
接触確認APIの利用については、接触確認APIの利用についても参照してください。
ビルド構成 サーバ通信 接触確認API 利用可能なメンバー Debug ON ON COCOA開発チーム Debug_Mock OFF(*) OFF(*) COCOA開発チーム, コミュニティメンバー Release ON ON COCOA開発チーム (*) モックAPIを利用
Debug # デバッグ用の構成です。サーバー通信と接触確認APIを利用します。 デバッグレベルのログを出力したり、AndroidのAndroidManifestの一部をデバッグ用に切り替えます。 切替内容に関する詳細は、DEBUGマクロを参照してください。
COCOA開発チームがデバッグする際に利用します。コミュニティメンバーが利用することはできません。
Debug_Mock # サーバーとの通信と接触確認APIについてはモック（Mock）が応答する構成です。</description></item><item><title>ライセンスの取り扱い</title><link>https://cocoa-mhlw.github.io/cocoa/docs/development/maintainance_oss_licenses/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cocoa-mhlw.github.io/cocoa/docs/development/maintainance_oss_licenses/</guid><description>ライセンスの取り扱い # COCOAのライセンス # COCOAは、オープンソースライセンスに「Mozilla Public License 2.0（MPL 2.0）」を採用しています。
https://www.mozilla.org/en-US/MPL/2.0/
MPL 2.0では、各ソースコードに次のライセンス通知を表示することを規定しています。
/* This Source Code Form is subject to the terms of the Mozilla Public * License, v. 2.0. If a copy of the MPL was not distributed with this * file, You can obtain one at https://mozilla.org/MPL/2.0/. */ ライセンス通知はプログラム・コードに加えて、XMLファイルなどにも追加する必要があります。
使用しているOSSライブラリに変更があったとき # COCOAが使用しているOSSのライセンス情報はリポジトリのルートにあるCOPYRIGHT_THIRD_PARTY_SOFTWARE_NOTICES.mdに集約します。
ライセンスに更新があった場合、ファイルCOPYRIGHT_THIRD_PARTY_SOFTWARE_NOTICES.mdをHTMLに変換したものをlicense.htmlとして、プラットフォームそれぞれ次の場所に配置します。
Android /Covid19Radar/Covid19Radar.Android/Assets ディレクトリ iOS Covid19Radar/Covid19Radar.iOS/Resources ディレクトリ 現状、ライセンスファイルの変換はGitHub Flavorであればよく、手動で行っています。これはライセンスの変更が週一程度の頻度では起こらないと考えているためです。ライセンスの編集が頻繁に発生するようであれば（それは開発工程を考え直した上で）、CIでの変換を検討します。</description></item><item><title>多言語対応</title><link>https://cocoa-mhlw.github.io/cocoa/docs/development/multi_language/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://cocoa-mhlw.github.io/cocoa/docs/development/multi_language/</guid><description>多言語対応 # COCOAの文字列リソースはCovid19Radar/Covid19Radar/Resources以下にあるAppResources.*.resxファイルにあります。
多言語対応をする際、たとえば日本語の文字列リソースを変更するときは AppResources.ja.resx を編集します。
以前は多言語対応にMultilingual App Toolkitを利用していましたが、現在は廃止されています。</description></item></channel></rss>